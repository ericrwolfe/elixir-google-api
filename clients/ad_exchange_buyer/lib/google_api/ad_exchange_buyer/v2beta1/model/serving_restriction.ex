# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.AdExchangeBuyer.V2beta1.Model.ServingRestriction do
  @moduledoc """
  @OutputOnly A representation of the status of an ad in a specific context. A context here relates to where something ultimately serves (for example, a user or publisher geo, a platform, an HTTPS vs HTTP request, or the type of auction).

  ## Attributes

  - contexts (List[ServingContext]): The contexts for the restriction. Defaults to: `null`.
  - disapprovalReasons (List[Disapproval]): Any disapprovals bound to this restriction. Only present if status&#x3D;DISAPPROVED. Can be used to filter the response of the creatives.list method. Defaults to: `null`.
  - status (String): The status of the creative in this context (for example, it has been explicitly disapproved or is pending review). Defaults to: `null`.
    - Enum - one of [STATUS_UNSPECIFIED, DISAPPROVAL, PENDING_REVIEW]
  """

  defstruct [
    :contexts,
    :disapprovalReasons,
    :status
  ]
end

defimpl Poison.Decoder, for: GoogleApi.AdExchangeBuyer.V2beta1.Model.ServingRestriction do
  import GoogleApi.AdExchangeBuyer.V2beta1.Deserializer

  def decode(value, options) do
    value
    |> deserialize(
      :contexts,
      :list,
      GoogleApi.AdExchangeBuyer.V2beta1.Model.ServingContext,
      options
    )
    |> deserialize(
      :disapprovalReasons,
      :list,
      GoogleApi.AdExchangeBuyer.V2beta1.Model.Disapproval,
      options
    )
  end
end

defimpl Poison.Encoder, for: GoogleApi.AdExchangeBuyer.V2beta1.Model.ServingRestriction do
  def encode(value, options) do
    GoogleApi.AdExchangeBuyer.V2beta1.Deserializer.serialize_non_nil(value, options)
  end
end
