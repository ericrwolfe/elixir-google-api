# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.AdExchangeBuyer.V2beta1.Api.Accounts do
  @moduledoc """
  API calls for all endpoints tagged `Accounts`.
  """

  alias GoogleApi.AdExchangeBuyer.V2beta1.Connection
  import GoogleApi.AdExchangeBuyer.V2beta1.RequestBuilder

  @doc """
  Creates a new client buyer.

  ## Parameters

  - connection (GoogleApi.AdExchangeBuyer.V2beta1.Connection): Connection to server
  - account_id (String): Unique numerical account ID for the buyer of which the client buyer is a customer; the sponsor buyer to create a client for. (required)
  - opts (KeywordList): [optional] Optional parameters
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :body (Client): 

  ## Returns

  {:ok, %GoogleApi.AdExchangeBuyer.V2beta1.Model.Client{}} on success
  {:error, info} on failure
  """
  @spec adexchangebuyer2_accounts_clients_create(Tesla.Env.client(), String.t(), keyword()) ::
          {:ok, GoogleApi.AdExchangeBuyer.V2beta1.Model.Client.t()} | {:error, Tesla.Env.t()}
  def adexchangebuyer2_accounts_clients_create(connection, account_id, opts \\ []) do
    optional_params = %{
      :key => :query,
      :access_token => :query,
      :quotaUser => :query,
      :pp => :query,
      :bearer_token => :query,
      :oauth_token => :query,
      :upload_protocol => :query,
      :prettyPrint => :query,
      :fields => :query,
      :uploadType => :query,
      :"$.xgafv" => :query,
      :callback => :query,
      :alt => :query,
      :body => :body
    }

    %{}
    |> method(:post)
    |> url("/v2beta1/accounts/{accountId}/clients", %{
      "accountId" => URI.encode_www_form(account_id)
    })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.AdExchangeBuyer.V2beta1.Model.Client{})
  end

  @doc """
  Gets a client buyer with a given client account ID.

  ## Parameters

  - connection (GoogleApi.AdExchangeBuyer.V2beta1.Connection): Connection to server
  - account_id (String): Numerical account ID of the client&#39;s sponsor buyer. (required)
  - client_account_id (String): Numerical account ID of the client buyer to retrieve. (required)
  - opts (KeywordList): [optional] Optional parameters
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.

  ## Returns

  {:ok, %GoogleApi.AdExchangeBuyer.V2beta1.Model.Client{}} on success
  {:error, info} on failure
  """
  @spec adexchangebuyer2_accounts_clients_get(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          keyword()
        ) :: {:ok, GoogleApi.AdExchangeBuyer.V2beta1.Model.Client.t()} | {:error, Tesla.Env.t()}
  def adexchangebuyer2_accounts_clients_get(connection, account_id, client_account_id, opts \\ []) do
    optional_params = %{
      :key => :query,
      :access_token => :query,
      :quotaUser => :query,
      :pp => :query,
      :bearer_token => :query,
      :oauth_token => :query,
      :upload_protocol => :query,
      :prettyPrint => :query,
      :fields => :query,
      :uploadType => :query,
      :"$.xgafv" => :query,
      :callback => :query,
      :alt => :query
    }

    %{}
    |> method(:get)
    |> url("/v2beta1/accounts/{accountId}/clients/{clientAccountId}", %{
      "accountId" => URI.encode_www_form(account_id),
      "clientAccountId" => URI.encode_www_form(client_account_id)
    })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.AdExchangeBuyer.V2beta1.Model.Client{})
  end

  @doc """
  Creates and sends out an email invitation to access an Ad Exchange client buyer account.

  ## Parameters

  - connection (GoogleApi.AdExchangeBuyer.V2beta1.Connection): Connection to server
  - account_id (String): Numerical account ID of the client&#39;s sponsor buyer. (required)
  - client_account_id (String): Numerical account ID of the client buyer that the user should be associated with. (required)
  - opts (KeywordList): [optional] Optional parameters
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :body (ClientUserInvitation): 

  ## Returns

  {:ok, %GoogleApi.AdExchangeBuyer.V2beta1.Model.ClientUserInvitation{}} on success
  {:error, info} on failure
  """
  @spec adexchangebuyer2_accounts_clients_invitations_create(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          keyword()
        ) ::
          {:ok, GoogleApi.AdExchangeBuyer.V2beta1.Model.ClientUserInvitation.t()}
          | {:error, Tesla.Env.t()}
  def adexchangebuyer2_accounts_clients_invitations_create(
        connection,
        account_id,
        client_account_id,
        opts \\ []
      ) do
    optional_params = %{
      :key => :query,
      :access_token => :query,
      :quotaUser => :query,
      :pp => :query,
      :bearer_token => :query,
      :oauth_token => :query,
      :upload_protocol => :query,
      :prettyPrint => :query,
      :fields => :query,
      :uploadType => :query,
      :"$.xgafv" => :query,
      :callback => :query,
      :alt => :query,
      :body => :body
    }

    %{}
    |> method(:post)
    |> url("/v2beta1/accounts/{accountId}/clients/{clientAccountId}/invitations", %{
      "accountId" => URI.encode_www_form(account_id),
      "clientAccountId" => URI.encode_www_form(client_account_id)
    })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.AdExchangeBuyer.V2beta1.Model.ClientUserInvitation{})
  end

  @doc """
  Retrieves an existing client user invitation.

  ## Parameters

  - connection (GoogleApi.AdExchangeBuyer.V2beta1.Connection): Connection to server
  - account_id (String): Numerical account ID of the client&#39;s sponsor buyer. (required)
  - client_account_id (String): Numerical account ID of the client buyer that the user invitation to be retrieved is associated with. (required)
  - invitation_id (String): Numerical identifier of the user invitation to retrieve. (required)
  - opts (KeywordList): [optional] Optional parameters
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.

  ## Returns

  {:ok, %GoogleApi.AdExchangeBuyer.V2beta1.Model.ClientUserInvitation{}} on success
  {:error, info} on failure
  """
  @spec adexchangebuyer2_accounts_clients_invitations_get(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          String.t(),
          keyword()
        ) ::
          {:ok, GoogleApi.AdExchangeBuyer.V2beta1.Model.ClientUserInvitation.t()}
          | {:error, Tesla.Env.t()}
  def adexchangebuyer2_accounts_clients_invitations_get(
        connection,
        account_id,
        client_account_id,
        invitation_id,
        opts \\ []
      ) do
    optional_params = %{
      :key => :query,
      :access_token => :query,
      :quotaUser => :query,
      :pp => :query,
      :bearer_token => :query,
      :oauth_token => :query,
      :upload_protocol => :query,
      :prettyPrint => :query,
      :fields => :query,
      :uploadType => :query,
      :"$.xgafv" => :query,
      :callback => :query,
      :alt => :query
    }

    %{}
    |> method(:get)
    |> url(
      "/v2beta1/accounts/{accountId}/clients/{clientAccountId}/invitations/{invitationId}",
      %{
        "accountId" => URI.encode_www_form(account_id),
        "clientAccountId" => URI.encode_www_form(client_account_id),
        "invitationId" => URI.encode_www_form(invitation_id)
      }
    )
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.AdExchangeBuyer.V2beta1.Model.ClientUserInvitation{})
  end

  @doc """
  Lists all the client users invitations for a client with a given account ID.

  ## Parameters

  - connection (GoogleApi.AdExchangeBuyer.V2beta1.Connection): Connection to server
  - account_id (String): Numerical account ID of the client&#39;s sponsor buyer. (required)
  - client_account_id (String): Numerical account ID of the client buyer to list invitations for. (required) You must either specify a string representation of a numerical account identifier or the &#x60;-&#x60; character to list all the invitations for all the clients of a given sponsor buyer.
  - opts (KeywordList): [optional] Optional parameters
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :page_token (String): A token identifying a page of results the server should return. Typically, this is the value of ListClientUserInvitationsResponse.nextPageToken returned from the previous call to the clients.invitations.list method.
    - :page_size (Integer): Requested page size. Server may return fewer clients than requested. If unspecified, server will pick an appropriate default.

  ## Returns

  {:ok, %GoogleApi.AdExchangeBuyer.V2beta1.Model.ListClientUserInvitationsResponse{}} on success
  {:error, info} on failure
  """
  @spec adexchangebuyer2_accounts_clients_invitations_list(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          keyword()
        ) ::
          {:ok, GoogleApi.AdExchangeBuyer.V2beta1.Model.ListClientUserInvitationsResponse.t()}
          | {:error, Tesla.Env.t()}
  def adexchangebuyer2_accounts_clients_invitations_list(
        connection,
        account_id,
        client_account_id,
        opts \\ []
      ) do
    optional_params = %{
      :key => :query,
      :access_token => :query,
      :quotaUser => :query,
      :pp => :query,
      :bearer_token => :query,
      :oauth_token => :query,
      :upload_protocol => :query,
      :prettyPrint => :query,
      :fields => :query,
      :uploadType => :query,
      :"$.xgafv" => :query,
      :callback => :query,
      :alt => :query,
      :pageToken => :query,
      :pageSize => :query
    }

    %{}
    |> method(:get)
    |> url("/v2beta1/accounts/{accountId}/clients/{clientAccountId}/invitations", %{
      "accountId" => URI.encode_www_form(account_id),
      "clientAccountId" => URI.encode_www_form(client_account_id)
    })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.AdExchangeBuyer.V2beta1.Model.ListClientUserInvitationsResponse{})
  end

  @doc """
  Lists all the clients for the current sponsor buyer.

  ## Parameters

  - connection (GoogleApi.AdExchangeBuyer.V2beta1.Connection): Connection to server
  - account_id (String): Unique numerical account ID of the sponsor buyer to list the clients for.
  - opts (KeywordList): [optional] Optional parameters
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :page_token (String): A token identifying a page of results the server should return. Typically, this is the value of ListClientsResponse.nextPageToken returned from the previous call to the accounts.clients.list method.
    - :page_size (Integer): Requested page size. The server may return fewer clients than requested. If unspecified, the server will pick an appropriate default.

  ## Returns

  {:ok, %GoogleApi.AdExchangeBuyer.V2beta1.Model.ListClientsResponse{}} on success
  {:error, info} on failure
  """
  @spec adexchangebuyer2_accounts_clients_list(Tesla.Env.client(), String.t(), keyword()) ::
          {:ok, GoogleApi.AdExchangeBuyer.V2beta1.Model.ListClientsResponse.t()}
          | {:error, Tesla.Env.t()}
  def adexchangebuyer2_accounts_clients_list(connection, account_id, opts \\ []) do
    optional_params = %{
      :key => :query,
      :access_token => :query,
      :quotaUser => :query,
      :pp => :query,
      :bearer_token => :query,
      :oauth_token => :query,
      :upload_protocol => :query,
      :prettyPrint => :query,
      :fields => :query,
      :uploadType => :query,
      :"$.xgafv" => :query,
      :callback => :query,
      :alt => :query,
      :pageToken => :query,
      :pageSize => :query
    }

    %{}
    |> method(:get)
    |> url("/v2beta1/accounts/{accountId}/clients", %{
      "accountId" => URI.encode_www_form(account_id)
    })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.AdExchangeBuyer.V2beta1.Model.ListClientsResponse{})
  end

  @doc """
  Updates an existing client buyer.

  ## Parameters

  - connection (GoogleApi.AdExchangeBuyer.V2beta1.Connection): Connection to server
  - account_id (String): Unique numerical account ID for the buyer of which the client buyer is a customer; the sponsor buyer to update a client for. (required)
  - client_account_id (String): Unique numerical account ID of the client to update. (required)
  - opts (KeywordList): [optional] Optional parameters
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :body (Client): 

  ## Returns

  {:ok, %GoogleApi.AdExchangeBuyer.V2beta1.Model.Client{}} on success
  {:error, info} on failure
  """
  @spec adexchangebuyer2_accounts_clients_update(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          keyword()
        ) :: {:ok, GoogleApi.AdExchangeBuyer.V2beta1.Model.Client.t()} | {:error, Tesla.Env.t()}
  def adexchangebuyer2_accounts_clients_update(
        connection,
        account_id,
        client_account_id,
        opts \\ []
      ) do
    optional_params = %{
      :key => :query,
      :access_token => :query,
      :quotaUser => :query,
      :pp => :query,
      :bearer_token => :query,
      :oauth_token => :query,
      :upload_protocol => :query,
      :prettyPrint => :query,
      :fields => :query,
      :uploadType => :query,
      :"$.xgafv" => :query,
      :callback => :query,
      :alt => :query,
      :body => :body
    }

    %{}
    |> method(:put)
    |> url("/v2beta1/accounts/{accountId}/clients/{clientAccountId}", %{
      "accountId" => URI.encode_www_form(account_id),
      "clientAccountId" => URI.encode_www_form(client_account_id)
    })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.AdExchangeBuyer.V2beta1.Model.Client{})
  end

  @doc """
  Retrieves an existing client user.

  ## Parameters

  - connection (GoogleApi.AdExchangeBuyer.V2beta1.Connection): Connection to server
  - account_id (String): Numerical account ID of the client&#39;s sponsor buyer. (required)
  - client_account_id (String): Numerical account ID of the client buyer that the user to be retrieved is associated with. (required)
  - user_id (String): Numerical identifier of the user to retrieve. (required)
  - opts (KeywordList): [optional] Optional parameters
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.

  ## Returns

  {:ok, %GoogleApi.AdExchangeBuyer.V2beta1.Model.ClientUser{}} on success
  {:error, info} on failure
  """
  @spec adexchangebuyer2_accounts_clients_users_get(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          String.t(),
          keyword()
        ) ::
          {:ok, GoogleApi.AdExchangeBuyer.V2beta1.Model.ClientUser.t()} | {:error, Tesla.Env.t()}
  def adexchangebuyer2_accounts_clients_users_get(
        connection,
        account_id,
        client_account_id,
        user_id,
        opts \\ []
      ) do
    optional_params = %{
      :key => :query,
      :access_token => :query,
      :quotaUser => :query,
      :pp => :query,
      :bearer_token => :query,
      :oauth_token => :query,
      :upload_protocol => :query,
      :prettyPrint => :query,
      :fields => :query,
      :uploadType => :query,
      :"$.xgafv" => :query,
      :callback => :query,
      :alt => :query
    }

    %{}
    |> method(:get)
    |> url("/v2beta1/accounts/{accountId}/clients/{clientAccountId}/users/{userId}", %{
      "accountId" => URI.encode_www_form(account_id),
      "clientAccountId" => URI.encode_www_form(client_account_id),
      "userId" => URI.encode_www_form(user_id)
    })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.AdExchangeBuyer.V2beta1.Model.ClientUser{})
  end

  @doc """
  Lists all the known client users for a specified sponsor buyer account ID.

  ## Parameters

  - connection (GoogleApi.AdExchangeBuyer.V2beta1.Connection): Connection to server
  - account_id (String): Numerical account ID of the sponsor buyer of the client to list users for. (required)
  - client_account_id (String): The account ID of the client buyer to list users for. (required) You must specify either a string representation of a numerical account identifier or the &#x60;-&#x60; character to list all the client users for all the clients of a given sponsor buyer.
  - opts (KeywordList): [optional] Optional parameters
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :page_token (String): A token identifying a page of results the server should return. Typically, this is the value of ListClientUsersResponse.nextPageToken returned from the previous call to the accounts.clients.users.list method.
    - :page_size (Integer): Requested page size. The server may return fewer clients than requested. If unspecified, the server will pick an appropriate default.

  ## Returns

  {:ok, %GoogleApi.AdExchangeBuyer.V2beta1.Model.ListClientUsersResponse{}} on success
  {:error, info} on failure
  """
  @spec adexchangebuyer2_accounts_clients_users_list(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          keyword()
        ) ::
          {:ok, GoogleApi.AdExchangeBuyer.V2beta1.Model.ListClientUsersResponse.t()}
          | {:error, Tesla.Env.t()}
  def adexchangebuyer2_accounts_clients_users_list(
        connection,
        account_id,
        client_account_id,
        opts \\ []
      ) do
    optional_params = %{
      :key => :query,
      :access_token => :query,
      :quotaUser => :query,
      :pp => :query,
      :bearer_token => :query,
      :oauth_token => :query,
      :upload_protocol => :query,
      :prettyPrint => :query,
      :fields => :query,
      :uploadType => :query,
      :"$.xgafv" => :query,
      :callback => :query,
      :alt => :query,
      :pageToken => :query,
      :pageSize => :query
    }

    %{}
    |> method(:get)
    |> url("/v2beta1/accounts/{accountId}/clients/{clientAccountId}/users", %{
      "accountId" => URI.encode_www_form(account_id),
      "clientAccountId" => URI.encode_www_form(client_account_id)
    })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.AdExchangeBuyer.V2beta1.Model.ListClientUsersResponse{})
  end

  @doc """
  Updates an existing client user. Only the user status can be changed on update.

  ## Parameters

  - connection (GoogleApi.AdExchangeBuyer.V2beta1.Connection): Connection to server
  - account_id (String): Numerical account ID of the client&#39;s sponsor buyer. (required)
  - client_account_id (String): Numerical account ID of the client buyer that the user to be retrieved is associated with. (required)
  - user_id (String): Numerical identifier of the user to retrieve. (required)
  - opts (KeywordList): [optional] Optional parameters
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :body (ClientUser): 

  ## Returns

  {:ok, %GoogleApi.AdExchangeBuyer.V2beta1.Model.ClientUser{}} on success
  {:error, info} on failure
  """
  @spec adexchangebuyer2_accounts_clients_users_update(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          String.t(),
          keyword()
        ) ::
          {:ok, GoogleApi.AdExchangeBuyer.V2beta1.Model.ClientUser.t()} | {:error, Tesla.Env.t()}
  def adexchangebuyer2_accounts_clients_users_update(
        connection,
        account_id,
        client_account_id,
        user_id,
        opts \\ []
      ) do
    optional_params = %{
      :key => :query,
      :access_token => :query,
      :quotaUser => :query,
      :pp => :query,
      :bearer_token => :query,
      :oauth_token => :query,
      :upload_protocol => :query,
      :prettyPrint => :query,
      :fields => :query,
      :uploadType => :query,
      :"$.xgafv" => :query,
      :callback => :query,
      :alt => :query,
      :body => :body
    }

    %{}
    |> method(:put)
    |> url("/v2beta1/accounts/{accountId}/clients/{clientAccountId}/users/{userId}", %{
      "accountId" => URI.encode_www_form(account_id),
      "clientAccountId" => URI.encode_www_form(client_account_id),
      "userId" => URI.encode_www_form(user_id)
    })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.AdExchangeBuyer.V2beta1.Model.ClientUser{})
  end

  @doc """
  Creates a creative.

  ## Parameters

  - connection (GoogleApi.AdExchangeBuyer.V2beta1.Connection): Connection to server
  - account_id (String): The account that this creative belongs to. Can be used to filter the response of the creatives.list method.
  - opts (KeywordList): [optional] Optional parameters
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :duplicate_id_mode (String): Indicates if multiple creatives can share an ID or not. Default is NO_DUPLICATES (one ID per creative).
    - :body (Creative): 

  ## Returns

  {:ok, %GoogleApi.AdExchangeBuyer.V2beta1.Model.Creative{}} on success
  {:error, info} on failure
  """
  @spec adexchangebuyer2_accounts_creatives_create(Tesla.Env.client(), String.t(), keyword()) ::
          {:ok, GoogleApi.AdExchangeBuyer.V2beta1.Model.Creative.t()} | {:error, Tesla.Env.t()}
  def adexchangebuyer2_accounts_creatives_create(connection, account_id, opts \\ []) do
    optional_params = %{
      :key => :query,
      :access_token => :query,
      :quotaUser => :query,
      :pp => :query,
      :bearer_token => :query,
      :oauth_token => :query,
      :upload_protocol => :query,
      :prettyPrint => :query,
      :fields => :query,
      :uploadType => :query,
      :"$.xgafv" => :query,
      :callback => :query,
      :alt => :query,
      :duplicateIdMode => :query,
      :body => :body
    }

    %{}
    |> method(:post)
    |> url("/v2beta1/accounts/{accountId}/creatives", %{
      "accountId" => URI.encode_www_form(account_id)
    })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.AdExchangeBuyer.V2beta1.Model.Creative{})
  end

  @doc """
  Associate an existing deal with a creative.

  ## Parameters

  - connection (GoogleApi.AdExchangeBuyer.V2beta1.Connection): Connection to server
  - account_id (String): The account the creative belongs to.
  - creative_id (String): The ID of the creative associated with the deal.
  - opts (KeywordList): [optional] Optional parameters
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :body (AddDealAssociationRequest): 

  ## Returns

  {:ok, %GoogleApi.AdExchangeBuyer.V2beta1.Model.Empty{}} on success
  {:error, info} on failure
  """
  @spec adexchangebuyer2_accounts_creatives_deal_associations_add(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          keyword()
        ) :: {:ok, GoogleApi.AdExchangeBuyer.V2beta1.Model.Empty.t()} | {:error, Tesla.Env.t()}
  def adexchangebuyer2_accounts_creatives_deal_associations_add(
        connection,
        account_id,
        creative_id,
        opts \\ []
      ) do
    optional_params = %{
      :key => :query,
      :access_token => :query,
      :quotaUser => :query,
      :pp => :query,
      :bearer_token => :query,
      :oauth_token => :query,
      :upload_protocol => :query,
      :prettyPrint => :query,
      :fields => :query,
      :uploadType => :query,
      :"$.xgafv" => :query,
      :callback => :query,
      :alt => :query,
      :body => :body
    }

    %{}
    |> method(:post)
    |> url("/v2beta1/accounts/{accountId}/creatives/{creativeId}/dealAssociations:add", %{
      "accountId" => URI.encode_www_form(account_id),
      "creativeId" => URI.encode_www_form(creative_id)
    })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.AdExchangeBuyer.V2beta1.Model.Empty{})
  end

  @doc """
  List all creative-deal associations.

  ## Parameters

  - connection (GoogleApi.AdExchangeBuyer.V2beta1.Connection): Connection to server
  - account_id (String): The account to list the associations from. Specify \&quot;-\&quot; to list all creatives the current user has access to.
  - creative_id (String): The creative ID to list the associations from. Specify \&quot;-\&quot; to list all creatives under the above account.
  - opts (KeywordList): [optional] Optional parameters
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :query (String): An optional query string to filter deal associations. If no filter is specified, all associations will be returned. Supported queries are: &lt;ul&gt; &lt;li&gt;accountId&#x3D;&lt;i&gt;account_id_string&lt;/i&gt; &lt;li&gt;creativeId&#x3D;&lt;i&gt;creative_id_string&lt;/i&gt; &lt;li&gt;dealsId&#x3D;&lt;i&gt;deals_id_string&lt;/i&gt; &lt;li&gt;dealsStatus:{approved, conditionally_approved, disapproved,                   not_checked} &lt;li&gt;openAuctionStatus:{approved, conditionally_approved, disapproved,                          not_checked} &lt;/ul&gt; Example: &#39;dealsId&#x3D;12345 AND dealsStatus:disapproved&#39;
    - :page_token (String): A token identifying a page of results the server should return. Typically, this is the value of ListDealAssociationsResponse.next_page_token returned from the previous call to &#39;ListDealAssociations&#39; method.
    - :page_size (Integer): Requested page size. Server may return fewer associations than requested. If unspecified, server will pick an appropriate default.

  ## Returns

  {:ok, %GoogleApi.AdExchangeBuyer.V2beta1.Model.ListDealAssociationsResponse{}} on success
  {:error, info} on failure
  """
  @spec adexchangebuyer2_accounts_creatives_deal_associations_list(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          keyword()
        ) ::
          {:ok, GoogleApi.AdExchangeBuyer.V2beta1.Model.ListDealAssociationsResponse.t()}
          | {:error, Tesla.Env.t()}
  def adexchangebuyer2_accounts_creatives_deal_associations_list(
        connection,
        account_id,
        creative_id,
        opts \\ []
      ) do
    optional_params = %{
      :key => :query,
      :access_token => :query,
      :quotaUser => :query,
      :pp => :query,
      :bearer_token => :query,
      :oauth_token => :query,
      :upload_protocol => :query,
      :prettyPrint => :query,
      :fields => :query,
      :uploadType => :query,
      :"$.xgafv" => :query,
      :callback => :query,
      :alt => :query,
      :query => :query,
      :pageToken => :query,
      :pageSize => :query
    }

    %{}
    |> method(:get)
    |> url("/v2beta1/accounts/{accountId}/creatives/{creativeId}/dealAssociations", %{
      "accountId" => URI.encode_www_form(account_id),
      "creativeId" => URI.encode_www_form(creative_id)
    })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.AdExchangeBuyer.V2beta1.Model.ListDealAssociationsResponse{})
  end

  @doc """
  Remove the association between a deal and a creative.

  ## Parameters

  - connection (GoogleApi.AdExchangeBuyer.V2beta1.Connection): Connection to server
  - account_id (String): The account the creative belongs to.
  - creative_id (String): The ID of the creative associated with the deal.
  - opts (KeywordList): [optional] Optional parameters
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :body (RemoveDealAssociationRequest): 

  ## Returns

  {:ok, %GoogleApi.AdExchangeBuyer.V2beta1.Model.Empty{}} on success
  {:error, info} on failure
  """
  @spec adexchangebuyer2_accounts_creatives_deal_associations_remove(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          keyword()
        ) :: {:ok, GoogleApi.AdExchangeBuyer.V2beta1.Model.Empty.t()} | {:error, Tesla.Env.t()}
  def adexchangebuyer2_accounts_creatives_deal_associations_remove(
        connection,
        account_id,
        creative_id,
        opts \\ []
      ) do
    optional_params = %{
      :key => :query,
      :access_token => :query,
      :quotaUser => :query,
      :pp => :query,
      :bearer_token => :query,
      :oauth_token => :query,
      :upload_protocol => :query,
      :prettyPrint => :query,
      :fields => :query,
      :uploadType => :query,
      :"$.xgafv" => :query,
      :callback => :query,
      :alt => :query,
      :body => :body
    }

    %{}
    |> method(:post)
    |> url("/v2beta1/accounts/{accountId}/creatives/{creativeId}/dealAssociations:remove", %{
      "accountId" => URI.encode_www_form(account_id),
      "creativeId" => URI.encode_www_form(creative_id)
    })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.AdExchangeBuyer.V2beta1.Model.Empty{})
  end

  @doc """
  Gets a creative.

  ## Parameters

  - connection (GoogleApi.AdExchangeBuyer.V2beta1.Connection): Connection to server
  - account_id (String): The account the creative belongs to.
  - creative_id (String): The ID of the creative to retrieve.
  - opts (KeywordList): [optional] Optional parameters
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.

  ## Returns

  {:ok, %GoogleApi.AdExchangeBuyer.V2beta1.Model.Creative{}} on success
  {:error, info} on failure
  """
  @spec adexchangebuyer2_accounts_creatives_get(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          keyword()
        ) :: {:ok, GoogleApi.AdExchangeBuyer.V2beta1.Model.Creative.t()} | {:error, Tesla.Env.t()}
  def adexchangebuyer2_accounts_creatives_get(connection, account_id, creative_id, opts \\ []) do
    optional_params = %{
      :key => :query,
      :access_token => :query,
      :quotaUser => :query,
      :pp => :query,
      :bearer_token => :query,
      :oauth_token => :query,
      :upload_protocol => :query,
      :prettyPrint => :query,
      :fields => :query,
      :uploadType => :query,
      :"$.xgafv" => :query,
      :callback => :query,
      :alt => :query
    }

    %{}
    |> method(:get)
    |> url("/v2beta1/accounts/{accountId}/creatives/{creativeId}", %{
      "accountId" => URI.encode_www_form(account_id),
      "creativeId" => URI.encode_www_form(creative_id)
    })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.AdExchangeBuyer.V2beta1.Model.Creative{})
  end

  @doc """
  Lists creatives.

  ## Parameters

  - connection (GoogleApi.AdExchangeBuyer.V2beta1.Connection): Connection to server
  - account_id (String): The account to list the creatives from. Specify \&quot;-\&quot; to list all creatives the current user has access to.
  - opts (KeywordList): [optional] Optional parameters
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :query (String): An optional query string to filter creatives. If no filter is specified, all active creatives will be returned. Supported queries are: &lt;ul&gt; &lt;li&gt;accountId&#x3D;&lt;i&gt;account_id_string&lt;/i&gt; &lt;li&gt;creativeId&#x3D;&lt;i&gt;creative_id_string&lt;/i&gt; &lt;li&gt;dealsStatus: {approved, conditionally_approved, disapproved,                    not_checked} &lt;li&gt;openAuctionStatus: {approved, conditionally_approved, disapproved,                           not_checked} &lt;li&gt;attribute: {a numeric attribute from the list of attributes} &lt;li&gt;disapprovalReason: {a reason from DisapprovalReason &lt;/ul&gt; Example: &#39;accountId&#x3D;12345 AND (dealsStatus:disapproved AND disapprovalReason:unacceptable_content) OR attribute:47&#39;
    - :page_token (String): A token identifying a page of results the server should return. Typically, this is the value of ListCreativesResponse.next_page_token returned from the previous call to &#39;ListCreatives&#39; method.
    - :page_size (Integer): Requested page size. The server may return fewer creatives than requested (due to timeout constraint) even if more are available via another call. If unspecified, server will pick an appropriate default. Acceptable values are 1 to 1000, inclusive.

  ## Returns

  {:ok, %GoogleApi.AdExchangeBuyer.V2beta1.Model.ListCreativesResponse{}} on success
  {:error, info} on failure
  """
  @spec adexchangebuyer2_accounts_creatives_list(Tesla.Env.client(), String.t(), keyword()) ::
          {:ok, GoogleApi.AdExchangeBuyer.V2beta1.Model.ListCreativesResponse.t()}
          | {:error, Tesla.Env.t()}
  def adexchangebuyer2_accounts_creatives_list(connection, account_id, opts \\ []) do
    optional_params = %{
      :key => :query,
      :access_token => :query,
      :quotaUser => :query,
      :pp => :query,
      :bearer_token => :query,
      :oauth_token => :query,
      :upload_protocol => :query,
      :prettyPrint => :query,
      :fields => :query,
      :uploadType => :query,
      :"$.xgafv" => :query,
      :callback => :query,
      :alt => :query,
      :query => :query,
      :pageToken => :query,
      :pageSize => :query
    }

    %{}
    |> method(:get)
    |> url("/v2beta1/accounts/{accountId}/creatives", %{
      "accountId" => URI.encode_www_form(account_id)
    })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.AdExchangeBuyer.V2beta1.Model.ListCreativesResponse{})
  end

  @doc """
  Stops watching a creative. Will stop push notifications being sent to the topics when the creative changes status.

  ## Parameters

  - connection (GoogleApi.AdExchangeBuyer.V2beta1.Connection): Connection to server
  - account_id (String): The account of the creative to stop notifications for.
  - creative_id (String): The creative ID of the creative to stop notifications for. Specify \&quot;-\&quot; to specify stopping account level notifications.
  - opts (KeywordList): [optional] Optional parameters
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :body (StopWatchingCreativeRequest): 

  ## Returns

  {:ok, %GoogleApi.AdExchangeBuyer.V2beta1.Model.Empty{}} on success
  {:error, info} on failure
  """
  @spec adexchangebuyer2_accounts_creatives_stop_watching(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          keyword()
        ) :: {:ok, GoogleApi.AdExchangeBuyer.V2beta1.Model.Empty.t()} | {:error, Tesla.Env.t()}
  def adexchangebuyer2_accounts_creatives_stop_watching(
        connection,
        account_id,
        creative_id,
        opts \\ []
      ) do
    optional_params = %{
      :key => :query,
      :access_token => :query,
      :quotaUser => :query,
      :pp => :query,
      :bearer_token => :query,
      :oauth_token => :query,
      :upload_protocol => :query,
      :prettyPrint => :query,
      :fields => :query,
      :uploadType => :query,
      :"$.xgafv" => :query,
      :callback => :query,
      :alt => :query,
      :body => :body
    }

    %{}
    |> method(:post)
    |> url("/v2beta1/accounts/{accountId}/creatives/{creativeId}:stopWatching", %{
      "accountId" => URI.encode_www_form(account_id),
      "creativeId" => URI.encode_www_form(creative_id)
    })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.AdExchangeBuyer.V2beta1.Model.Empty{})
  end

  @doc """
  Updates a creative.

  ## Parameters

  - connection (GoogleApi.AdExchangeBuyer.V2beta1.Connection): Connection to server
  - account_id (String): The account that this creative belongs to. Can be used to filter the response of the creatives.list method.
  - creative_id (String): The buyer-defined creative ID of this creative. Can be used to filter the response of the creatives.list method.
  - opts (KeywordList): [optional] Optional parameters
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :body (Creative): 

  ## Returns

  {:ok, %GoogleApi.AdExchangeBuyer.V2beta1.Model.Creative{}} on success
  {:error, info} on failure
  """
  @spec adexchangebuyer2_accounts_creatives_update(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          keyword()
        ) :: {:ok, GoogleApi.AdExchangeBuyer.V2beta1.Model.Creative.t()} | {:error, Tesla.Env.t()}
  def adexchangebuyer2_accounts_creatives_update(connection, account_id, creative_id, opts \\ []) do
    optional_params = %{
      :key => :query,
      :access_token => :query,
      :quotaUser => :query,
      :pp => :query,
      :bearer_token => :query,
      :oauth_token => :query,
      :upload_protocol => :query,
      :prettyPrint => :query,
      :fields => :query,
      :uploadType => :query,
      :"$.xgafv" => :query,
      :callback => :query,
      :alt => :query,
      :body => :body
    }

    %{}
    |> method(:put)
    |> url("/v2beta1/accounts/{accountId}/creatives/{creativeId}", %{
      "accountId" => URI.encode_www_form(account_id),
      "creativeId" => URI.encode_www_form(creative_id)
    })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.AdExchangeBuyer.V2beta1.Model.Creative{})
  end

  @doc """
  Watches a creative. Will result in push notifications being sent to the topic when the creative changes status.

  ## Parameters

  - connection (GoogleApi.AdExchangeBuyer.V2beta1.Connection): Connection to server
  - account_id (String): The account of the creative to watch.
  - creative_id (String): The creative ID to watch for status changes. Specify \&quot;-\&quot; to watch all creatives under the above account. If both creative-level and account-level notifications are sent, only a single notification will be sent to the creative-level notification topic.
  - opts (KeywordList): [optional] Optional parameters
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :body (WatchCreativeRequest): 

  ## Returns

  {:ok, %GoogleApi.AdExchangeBuyer.V2beta1.Model.Empty{}} on success
  {:error, info} on failure
  """
  @spec adexchangebuyer2_accounts_creatives_watch(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          keyword()
        ) :: {:ok, GoogleApi.AdExchangeBuyer.V2beta1.Model.Empty.t()} | {:error, Tesla.Env.t()}
  def adexchangebuyer2_accounts_creatives_watch(connection, account_id, creative_id, opts \\ []) do
    optional_params = %{
      :key => :query,
      :access_token => :query,
      :quotaUser => :query,
      :pp => :query,
      :bearer_token => :query,
      :oauth_token => :query,
      :upload_protocol => :query,
      :prettyPrint => :query,
      :fields => :query,
      :uploadType => :query,
      :"$.xgafv" => :query,
      :callback => :query,
      :alt => :query,
      :body => :body
    }

    %{}
    |> method(:post)
    |> url("/v2beta1/accounts/{accountId}/creatives/{creativeId}:watch", %{
      "accountId" => URI.encode_www_form(account_id),
      "creativeId" => URI.encode_www_form(creative_id)
    })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.AdExchangeBuyer.V2beta1.Model.Empty{})
  end

  @doc """
  Lists all metrics that are measured in terms of number of bids.

  ## Parameters

  - connection (GoogleApi.AdExchangeBuyer.V2beta1.Connection): Connection to server
  - account_id (String): Account ID of the buyer.
  - filter_set_id (String): The ID of the filter set to apply.
  - opts (KeywordList): [optional] Optional parameters
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :page_token (String): A token identifying a page of results the server should return. Typically, this is the value of ListBidMetricsResponse.nextPageToken returned from the previous call to the accounts.filterSets.bidMetrics.list method.
    - :page_size (Integer): Requested page size. The server may return fewer results than requested. If unspecified, the server will pick an appropriate default.

  ## Returns

  {:ok, %GoogleApi.AdExchangeBuyer.V2beta1.Model.ListBidMetricsResponse{}} on success
  {:error, info} on failure
  """
  @spec adexchangebuyer2_accounts_filter_sets_bid_metrics_list(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          keyword()
        ) ::
          {:ok, GoogleApi.AdExchangeBuyer.V2beta1.Model.ListBidMetricsResponse.t()}
          | {:error, Tesla.Env.t()}
  def adexchangebuyer2_accounts_filter_sets_bid_metrics_list(
        connection,
        account_id,
        filter_set_id,
        opts \\ []
      ) do
    optional_params = %{
      :key => :query,
      :access_token => :query,
      :quotaUser => :query,
      :pp => :query,
      :bearer_token => :query,
      :oauth_token => :query,
      :upload_protocol => :query,
      :prettyPrint => :query,
      :fields => :query,
      :uploadType => :query,
      :"$.xgafv" => :query,
      :callback => :query,
      :alt => :query,
      :pageToken => :query,
      :pageSize => :query
    }

    %{}
    |> method(:get)
    |> url("/v2beta1/accounts/{accountId}/filterSets/{filterSetId}/bidMetrics", %{
      "accountId" => URI.encode_www_form(account_id),
      "filterSetId" => URI.encode_www_form(filter_set_id)
    })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.AdExchangeBuyer.V2beta1.Model.ListBidMetricsResponse{})
  end

  @doc """
  List all errors that occurred in bid responses, with the number of bid responses affected for each reason.

  ## Parameters

  - connection (GoogleApi.AdExchangeBuyer.V2beta1.Connection): Connection to server
  - account_id (String): Account ID of the buyer.
  - filter_set_id (String): The ID of the filter set to apply.
  - opts (KeywordList): [optional] Optional parameters
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :page_token (String): A token identifying a page of results the server should return. Typically, this is the value of ListBidResponseErrorsResponse.nextPageToken returned from the previous call to the accounts.filterSets.bidResponseErrors.list method.
    - :page_size (Integer): Requested page size. The server may return fewer results than requested. If unspecified, the server will pick an appropriate default.

  ## Returns

  {:ok, %GoogleApi.AdExchangeBuyer.V2beta1.Model.ListBidResponseErrorsResponse{}} on success
  {:error, info} on failure
  """
  @spec adexchangebuyer2_accounts_filter_sets_bid_response_errors_list(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          keyword()
        ) ::
          {:ok, GoogleApi.AdExchangeBuyer.V2beta1.Model.ListBidResponseErrorsResponse.t()}
          | {:error, Tesla.Env.t()}
  def adexchangebuyer2_accounts_filter_sets_bid_response_errors_list(
        connection,
        account_id,
        filter_set_id,
        opts \\ []
      ) do
    optional_params = %{
      :key => :query,
      :access_token => :query,
      :quotaUser => :query,
      :pp => :query,
      :bearer_token => :query,
      :oauth_token => :query,
      :upload_protocol => :query,
      :prettyPrint => :query,
      :fields => :query,
      :uploadType => :query,
      :"$.xgafv" => :query,
      :callback => :query,
      :alt => :query,
      :pageToken => :query,
      :pageSize => :query
    }

    %{}
    |> method(:get)
    |> url("/v2beta1/accounts/{accountId}/filterSets/{filterSetId}/bidResponseErrors", %{
      "accountId" => URI.encode_www_form(account_id),
      "filterSetId" => URI.encode_www_form(filter_set_id)
    })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.AdExchangeBuyer.V2beta1.Model.ListBidResponseErrorsResponse{})
  end

  @doc """
  List all reasons for which bid responses were considered to have no applicable bids, with the number of bid responses affected for each reason.

  ## Parameters

  - connection (GoogleApi.AdExchangeBuyer.V2beta1.Connection): Connection to server
  - account_id (String): Account ID of the buyer.
  - filter_set_id (String): The ID of the filter set to apply.
  - opts (KeywordList): [optional] Optional parameters
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :page_token (String): A token identifying a page of results the server should return. Typically, this is the value of ListBidResponsesWithoutBidsResponse.nextPageToken returned from the previous call to the accounts.filterSets.bidResponsesWithoutBids.list method.
    - :page_size (Integer): Requested page size. The server may return fewer results than requested. If unspecified, the server will pick an appropriate default.

  ## Returns

  {:ok, %GoogleApi.AdExchangeBuyer.V2beta1.Model.ListBidResponsesWithoutBidsResponse{}} on success
  {:error, info} on failure
  """
  @spec adexchangebuyer2_accounts_filter_sets_bid_responses_without_bids_list(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          keyword()
        ) ::
          {:ok, GoogleApi.AdExchangeBuyer.V2beta1.Model.ListBidResponsesWithoutBidsResponse.t()}
          | {:error, Tesla.Env.t()}
  def adexchangebuyer2_accounts_filter_sets_bid_responses_without_bids_list(
        connection,
        account_id,
        filter_set_id,
        opts \\ []
      ) do
    optional_params = %{
      :key => :query,
      :access_token => :query,
      :quotaUser => :query,
      :pp => :query,
      :bearer_token => :query,
      :oauth_token => :query,
      :upload_protocol => :query,
      :prettyPrint => :query,
      :fields => :query,
      :uploadType => :query,
      :"$.xgafv" => :query,
      :callback => :query,
      :alt => :query,
      :pageToken => :query,
      :pageSize => :query
    }

    %{}
    |> method(:get)
    |> url("/v2beta1/accounts/{accountId}/filterSets/{filterSetId}/bidResponsesWithoutBids", %{
      "accountId" => URI.encode_www_form(account_id),
      "filterSetId" => URI.encode_www_form(filter_set_id)
    })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.AdExchangeBuyer.V2beta1.Model.ListBidResponsesWithoutBidsResponse{})
  end

  @doc """
  Creates the specified filter set for the account with the given account ID.

  ## Parameters

  - connection (GoogleApi.AdExchangeBuyer.V2beta1.Connection): Connection to server
  - account_id (String): Account ID of the buyer.
  - opts (KeywordList): [optional] Optional parameters
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :is_transient (Boolean): Whether the filter set is transient, or should be persisted indefinitely. By default, filter sets are not transient. If transient, it will be available for at least 1 hour after creation.
    - :body (FilterSet): 

  ## Returns

  {:ok, %GoogleApi.AdExchangeBuyer.V2beta1.Model.FilterSet{}} on success
  {:error, info} on failure
  """
  @spec adexchangebuyer2_accounts_filter_sets_create(Tesla.Env.client(), String.t(), keyword()) ::
          {:ok, GoogleApi.AdExchangeBuyer.V2beta1.Model.FilterSet.t()} | {:error, Tesla.Env.t()}
  def adexchangebuyer2_accounts_filter_sets_create(connection, account_id, opts \\ []) do
    optional_params = %{
      :key => :query,
      :access_token => :query,
      :quotaUser => :query,
      :pp => :query,
      :bearer_token => :query,
      :oauth_token => :query,
      :upload_protocol => :query,
      :prettyPrint => :query,
      :fields => :query,
      :uploadType => :query,
      :"$.xgafv" => :query,
      :callback => :query,
      :alt => :query,
      :isTransient => :query,
      :body => :body
    }

    %{}
    |> method(:post)
    |> url("/v2beta1/accounts/{accountId}/filterSets", %{
      "accountId" => URI.encode_www_form(account_id)
    })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.AdExchangeBuyer.V2beta1.Model.FilterSet{})
  end

  @doc """
  Deletes the requested filter set from the account with the given account ID.

  ## Parameters

  - connection (GoogleApi.AdExchangeBuyer.V2beta1.Connection): Connection to server
  - account_id (String): Account ID of the buyer.
  - filter_set_id (String): The ID of the filter set to delete.
  - opts (KeywordList): [optional] Optional parameters
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.

  ## Returns

  {:ok, %GoogleApi.AdExchangeBuyer.V2beta1.Model.Empty{}} on success
  {:error, info} on failure
  """
  @spec adexchangebuyer2_accounts_filter_sets_delete(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          keyword()
        ) :: {:ok, GoogleApi.AdExchangeBuyer.V2beta1.Model.Empty.t()} | {:error, Tesla.Env.t()}
  def adexchangebuyer2_accounts_filter_sets_delete(
        connection,
        account_id,
        filter_set_id,
        opts \\ []
      ) do
    optional_params = %{
      :key => :query,
      :access_token => :query,
      :quotaUser => :query,
      :pp => :query,
      :bearer_token => :query,
      :oauth_token => :query,
      :upload_protocol => :query,
      :prettyPrint => :query,
      :fields => :query,
      :uploadType => :query,
      :"$.xgafv" => :query,
      :callback => :query,
      :alt => :query
    }

    %{}
    |> method(:delete)
    |> url("/v2beta1/accounts/{accountId}/filterSets/{filterSetId}", %{
      "accountId" => URI.encode_www_form(account_id),
      "filterSetId" => URI.encode_www_form(filter_set_id)
    })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.AdExchangeBuyer.V2beta1.Model.Empty{})
  end

  @doc """
  List all reasons that caused a bid request not to be sent for an impression, with the number of bid requests not sent for each reason.

  ## Parameters

  - connection (GoogleApi.AdExchangeBuyer.V2beta1.Connection): Connection to server
  - account_id (String): Account ID of the buyer.
  - filter_set_id (String): The ID of the filter set to apply.
  - opts (KeywordList): [optional] Optional parameters
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :page_token (String): A token identifying a page of results the server should return. Typically, this is the value of ListFilteredBidRequestsResponse.nextPageToken returned from the previous call to the accounts.filterSets.filteredBidRequests.list method.
    - :page_size (Integer): Requested page size. The server may return fewer results than requested. If unspecified, the server will pick an appropriate default.

  ## Returns

  {:ok, %GoogleApi.AdExchangeBuyer.V2beta1.Model.ListFilteredBidRequestsResponse{}} on success
  {:error, info} on failure
  """
  @spec adexchangebuyer2_accounts_filter_sets_filtered_bid_requests_list(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          keyword()
        ) ::
          {:ok, GoogleApi.AdExchangeBuyer.V2beta1.Model.ListFilteredBidRequestsResponse.t()}
          | {:error, Tesla.Env.t()}
  def adexchangebuyer2_accounts_filter_sets_filtered_bid_requests_list(
        connection,
        account_id,
        filter_set_id,
        opts \\ []
      ) do
    optional_params = %{
      :key => :query,
      :access_token => :query,
      :quotaUser => :query,
      :pp => :query,
      :bearer_token => :query,
      :oauth_token => :query,
      :upload_protocol => :query,
      :prettyPrint => :query,
      :fields => :query,
      :uploadType => :query,
      :"$.xgafv" => :query,
      :callback => :query,
      :alt => :query,
      :pageToken => :query,
      :pageSize => :query
    }

    %{}
    |> method(:get)
    |> url("/v2beta1/accounts/{accountId}/filterSets/{filterSetId}/filteredBidRequests", %{
      "accountId" => URI.encode_www_form(account_id),
      "filterSetId" => URI.encode_www_form(filter_set_id)
    })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.AdExchangeBuyer.V2beta1.Model.ListFilteredBidRequestsResponse{})
  end

  @doc """
  List all creatives associated with a specific reason for which bids were filtered, with the number of bids filtered for each creative.

  ## Parameters

  - connection (GoogleApi.AdExchangeBuyer.V2beta1.Connection): Connection to server
  - account_id (String): Account ID of the buyer.
  - filter_set_id (String): The ID of the filter set to apply.
  - creative_status_id (Integer): The ID of the creative status for which to retrieve a breakdown by creative. See [creative-status-codes](https://developers.google.com/ad-exchange/rtb/downloads/creative-status-codes).
  - opts (KeywordList): [optional] Optional parameters
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :page_token (String): A token identifying a page of results the server should return. Typically, this is the value of ListCreativeStatusBreakdownByCreativeResponse.nextPageToken returned from the previous call to the accounts.filterSets.filteredBids.creatives.list method.
    - :page_size (Integer): Requested page size. The server may return fewer results than requested. If unspecified, the server will pick an appropriate default.

  ## Returns

  {:ok, %GoogleApi.AdExchangeBuyer.V2beta1.Model.ListCreativeStatusBreakdownByCreativeResponse{}} on success
  {:error, info} on failure
  """
  @spec adexchangebuyer2_accounts_filter_sets_filtered_bids_creatives_list(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          Integer.t(),
          keyword()
        ) ::
          {:ok,
           GoogleApi.AdExchangeBuyer.V2beta1.Model.ListCreativeStatusBreakdownByCreativeResponse.t()}
          | {:error, Tesla.Env.t()}
  def adexchangebuyer2_accounts_filter_sets_filtered_bids_creatives_list(
        connection,
        account_id,
        filter_set_id,
        creative_status_id,
        opts \\ []
      ) do
    optional_params = %{
      :key => :query,
      :access_token => :query,
      :quotaUser => :query,
      :pp => :query,
      :bearer_token => :query,
      :oauth_token => :query,
      :upload_protocol => :query,
      :prettyPrint => :query,
      :fields => :query,
      :uploadType => :query,
      :"$.xgafv" => :query,
      :callback => :query,
      :alt => :query,
      :pageToken => :query,
      :pageSize => :query
    }

    %{}
    |> method(:get)
    |> url(
      "/v2beta1/accounts/{accountId}/filterSets/{filterSetId}/filteredBids/{creativeStatusId}/creatives",
      %{
        "accountId" => URI.encode_www_form(account_id),
        "filterSetId" => URI.encode_www_form(filter_set_id),
        "creativeStatusId" => URI.encode_www_form(creative_status_id)
      }
    )
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(
      %GoogleApi.AdExchangeBuyer.V2beta1.Model.ListCreativeStatusBreakdownByCreativeResponse{}
    )
  end

  @doc """
  List all details associated with a specific reason for which bids were filtered, with the number of bids filtered for each detail.

  ## Parameters

  - connection (GoogleApi.AdExchangeBuyer.V2beta1.Connection): Connection to server
  - account_id (String): Account ID of the buyer.
  - filter_set_id (String): The ID of the filter set to apply.
  - creative_status_id (Integer): The ID of the creative status for which to retrieve a breakdown by detail. See [creative-status-codes](https://developers.google.com/ad-exchange/rtb/downloads/creative-status-codes). Details are only available for statuses 10, 14, 15, 17, 18, 19, 86, and 87.
  - opts (KeywordList): [optional] Optional parameters
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :page_token (String): A token identifying a page of results the server should return. Typically, this is the value of ListCreativeStatusBreakdownByDetailResponse.nextPageToken returned from the previous call to the accounts.filterSets.filteredBids.details.list method.
    - :page_size (Integer): Requested page size. The server may return fewer results than requested. If unspecified, the server will pick an appropriate default.

  ## Returns

  {:ok, %GoogleApi.AdExchangeBuyer.V2beta1.Model.ListCreativeStatusBreakdownByDetailResponse{}} on success
  {:error, info} on failure
  """
  @spec adexchangebuyer2_accounts_filter_sets_filtered_bids_details_list(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          Integer.t(),
          keyword()
        ) ::
          {:ok,
           GoogleApi.AdExchangeBuyer.V2beta1.Model.ListCreativeStatusBreakdownByDetailResponse.t()}
          | {:error, Tesla.Env.t()}
  def adexchangebuyer2_accounts_filter_sets_filtered_bids_details_list(
        connection,
        account_id,
        filter_set_id,
        creative_status_id,
        opts \\ []
      ) do
    optional_params = %{
      :key => :query,
      :access_token => :query,
      :quotaUser => :query,
      :pp => :query,
      :bearer_token => :query,
      :oauth_token => :query,
      :upload_protocol => :query,
      :prettyPrint => :query,
      :fields => :query,
      :uploadType => :query,
      :"$.xgafv" => :query,
      :callback => :query,
      :alt => :query,
      :pageToken => :query,
      :pageSize => :query
    }

    %{}
    |> method(:get)
    |> url(
      "/v2beta1/accounts/{accountId}/filterSets/{filterSetId}/filteredBids/{creativeStatusId}/details",
      %{
        "accountId" => URI.encode_www_form(account_id),
        "filterSetId" => URI.encode_www_form(filter_set_id),
        "creativeStatusId" => URI.encode_www_form(creative_status_id)
      }
    )
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(
      %GoogleApi.AdExchangeBuyer.V2beta1.Model.ListCreativeStatusBreakdownByDetailResponse{}
    )
  end

  @doc """
  List all reasons for which bids were filtered, with the number of bids filtered for each reason.

  ## Parameters

  - connection (GoogleApi.AdExchangeBuyer.V2beta1.Connection): Connection to server
  - account_id (String): Account ID of the buyer.
  - filter_set_id (String): The ID of the filter set to apply.
  - opts (KeywordList): [optional] Optional parameters
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :page_token (String): A token identifying a page of results the server should return. Typically, this is the value of ListFilteredBidsResponse.nextPageToken returned from the previous call to the accounts.filterSets.filteredBids.list method.
    - :page_size (Integer): Requested page size. The server may return fewer results than requested. If unspecified, the server will pick an appropriate default.

  ## Returns

  {:ok, %GoogleApi.AdExchangeBuyer.V2beta1.Model.ListFilteredBidsResponse{}} on success
  {:error, info} on failure
  """
  @spec adexchangebuyer2_accounts_filter_sets_filtered_bids_list(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          keyword()
        ) ::
          {:ok, GoogleApi.AdExchangeBuyer.V2beta1.Model.ListFilteredBidsResponse.t()}
          | {:error, Tesla.Env.t()}
  def adexchangebuyer2_accounts_filter_sets_filtered_bids_list(
        connection,
        account_id,
        filter_set_id,
        opts \\ []
      ) do
    optional_params = %{
      :key => :query,
      :access_token => :query,
      :quotaUser => :query,
      :pp => :query,
      :bearer_token => :query,
      :oauth_token => :query,
      :upload_protocol => :query,
      :prettyPrint => :query,
      :fields => :query,
      :uploadType => :query,
      :"$.xgafv" => :query,
      :callback => :query,
      :alt => :query,
      :pageToken => :query,
      :pageSize => :query
    }

    %{}
    |> method(:get)
    |> url("/v2beta1/accounts/{accountId}/filterSets/{filterSetId}/filteredBids", %{
      "accountId" => URI.encode_www_form(account_id),
      "filterSetId" => URI.encode_www_form(filter_set_id)
    })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.AdExchangeBuyer.V2beta1.Model.ListFilteredBidsResponse{})
  end

  @doc """
  Retrieves the requested filter set for the account with the given account ID.

  ## Parameters

  - connection (GoogleApi.AdExchangeBuyer.V2beta1.Connection): Connection to server
  - account_id (String): Account ID of the buyer.
  - filter_set_id (String): The ID of the filter set to get.
  - opts (KeywordList): [optional] Optional parameters
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.

  ## Returns

  {:ok, %GoogleApi.AdExchangeBuyer.V2beta1.Model.FilterSet{}} on success
  {:error, info} on failure
  """
  @spec adexchangebuyer2_accounts_filter_sets_get(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          keyword()
        ) ::
          {:ok, GoogleApi.AdExchangeBuyer.V2beta1.Model.FilterSet.t()} | {:error, Tesla.Env.t()}
  def adexchangebuyer2_accounts_filter_sets_get(connection, account_id, filter_set_id, opts \\ []) do
    optional_params = %{
      :key => :query,
      :access_token => :query,
      :quotaUser => :query,
      :pp => :query,
      :bearer_token => :query,
      :oauth_token => :query,
      :upload_protocol => :query,
      :prettyPrint => :query,
      :fields => :query,
      :uploadType => :query,
      :"$.xgafv" => :query,
      :callback => :query,
      :alt => :query
    }

    %{}
    |> method(:get)
    |> url("/v2beta1/accounts/{accountId}/filterSets/{filterSetId}", %{
      "accountId" => URI.encode_www_form(account_id),
      "filterSetId" => URI.encode_www_form(filter_set_id)
    })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.AdExchangeBuyer.V2beta1.Model.FilterSet{})
  end

  @doc """
  Lists all metrics that are measured in terms of number of impressions.

  ## Parameters

  - connection (GoogleApi.AdExchangeBuyer.V2beta1.Connection): Connection to server
  - account_id (String): Account ID of the buyer.
  - filter_set_id (String): The ID of the filter set to apply.
  - opts (KeywordList): [optional] Optional parameters
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :page_token (String): A token identifying a page of results the server should return. Typically, this is the value of ListImpressionMetricsResponse.nextPageToken returned from the previous call to the accounts.filterSets.impressionMetrics.list method.
    - :page_size (Integer): Requested page size. The server may return fewer results than requested. If unspecified, the server will pick an appropriate default.

  ## Returns

  {:ok, %GoogleApi.AdExchangeBuyer.V2beta1.Model.ListImpressionMetricsResponse{}} on success
  {:error, info} on failure
  """
  @spec adexchangebuyer2_accounts_filter_sets_impression_metrics_list(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          keyword()
        ) ::
          {:ok, GoogleApi.AdExchangeBuyer.V2beta1.Model.ListImpressionMetricsResponse.t()}
          | {:error, Tesla.Env.t()}
  def adexchangebuyer2_accounts_filter_sets_impression_metrics_list(
        connection,
        account_id,
        filter_set_id,
        opts \\ []
      ) do
    optional_params = %{
      :key => :query,
      :access_token => :query,
      :quotaUser => :query,
      :pp => :query,
      :bearer_token => :query,
      :oauth_token => :query,
      :upload_protocol => :query,
      :prettyPrint => :query,
      :fields => :query,
      :uploadType => :query,
      :"$.xgafv" => :query,
      :callback => :query,
      :alt => :query,
      :pageToken => :query,
      :pageSize => :query
    }

    %{}
    |> method(:get)
    |> url("/v2beta1/accounts/{accountId}/filterSets/{filterSetId}/impressionMetrics", %{
      "accountId" => URI.encode_www_form(account_id),
      "filterSetId" => URI.encode_www_form(filter_set_id)
    })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.AdExchangeBuyer.V2beta1.Model.ListImpressionMetricsResponse{})
  end

  @doc """
  Lists all filter sets for the account with the given account ID.

  ## Parameters

  - connection (GoogleApi.AdExchangeBuyer.V2beta1.Connection): Connection to server
  - account_id (String): Account ID of the buyer.
  - opts (KeywordList): [optional] Optional parameters
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :page_token (String): A token identifying a page of results the server should return. Typically, this is the value of ListFilterSetsResponse.nextPageToken returned from the previous call to the accounts.filterSets.list method.
    - :page_size (Integer): Requested page size. The server may return fewer results than requested. If unspecified, the server will pick an appropriate default.

  ## Returns

  {:ok, %GoogleApi.AdExchangeBuyer.V2beta1.Model.ListFilterSetsResponse{}} on success
  {:error, info} on failure
  """
  @spec adexchangebuyer2_accounts_filter_sets_list(Tesla.Env.client(), String.t(), keyword()) ::
          {:ok, GoogleApi.AdExchangeBuyer.V2beta1.Model.ListFilterSetsResponse.t()}
          | {:error, Tesla.Env.t()}
  def adexchangebuyer2_accounts_filter_sets_list(connection, account_id, opts \\ []) do
    optional_params = %{
      :key => :query,
      :access_token => :query,
      :quotaUser => :query,
      :pp => :query,
      :bearer_token => :query,
      :oauth_token => :query,
      :upload_protocol => :query,
      :prettyPrint => :query,
      :fields => :query,
      :uploadType => :query,
      :"$.xgafv" => :query,
      :callback => :query,
      :alt => :query,
      :pageToken => :query,
      :pageSize => :query
    }

    %{}
    |> method(:get)
    |> url("/v2beta1/accounts/{accountId}/filterSets", %{
      "accountId" => URI.encode_www_form(account_id)
    })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.AdExchangeBuyer.V2beta1.Model.ListFilterSetsResponse{})
  end

  @doc """
  List all reasons for which bids lost in the auction, with the number of bids that lost for each reason.

  ## Parameters

  - connection (GoogleApi.AdExchangeBuyer.V2beta1.Connection): Connection to server
  - account_id (String): Account ID of the buyer.
  - filter_set_id (String): The ID of the filter set to apply.
  - opts (KeywordList): [optional] Optional parameters
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :page_token (String): A token identifying a page of results the server should return. Typically, this is the value of ListLosingBidsResponse.nextPageToken returned from the previous call to the accounts.filterSets.losingBids.list method.
    - :page_size (Integer): Requested page size. The server may return fewer results than requested. If unspecified, the server will pick an appropriate default.

  ## Returns

  {:ok, %GoogleApi.AdExchangeBuyer.V2beta1.Model.ListLosingBidsResponse{}} on success
  {:error, info} on failure
  """
  @spec adexchangebuyer2_accounts_filter_sets_losing_bids_list(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          keyword()
        ) ::
          {:ok, GoogleApi.AdExchangeBuyer.V2beta1.Model.ListLosingBidsResponse.t()}
          | {:error, Tesla.Env.t()}
  def adexchangebuyer2_accounts_filter_sets_losing_bids_list(
        connection,
        account_id,
        filter_set_id,
        opts \\ []
      ) do
    optional_params = %{
      :key => :query,
      :access_token => :query,
      :quotaUser => :query,
      :pp => :query,
      :bearer_token => :query,
      :oauth_token => :query,
      :upload_protocol => :query,
      :prettyPrint => :query,
      :fields => :query,
      :uploadType => :query,
      :"$.xgafv" => :query,
      :callback => :query,
      :alt => :query,
      :pageToken => :query,
      :pageSize => :query
    }

    %{}
    |> method(:get)
    |> url("/v2beta1/accounts/{accountId}/filterSets/{filterSetId}/losingBids", %{
      "accountId" => URI.encode_www_form(account_id),
      "filterSetId" => URI.encode_www_form(filter_set_id)
    })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.AdExchangeBuyer.V2beta1.Model.ListLosingBidsResponse{})
  end

  @doc """
  List all reasons for which winning bids were not billable, with the number of bids not billed for each reason.

  ## Parameters

  - connection (GoogleApi.AdExchangeBuyer.V2beta1.Connection): Connection to server
  - account_id (String): Account ID of the buyer.
  - filter_set_id (String): The ID of the filter set to apply.
  - opts (KeywordList): [optional] Optional parameters
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :page_token (String): A token identifying a page of results the server should return. Typically, this is the value of ListNonBillableWinningBidsResponse.nextPageToken returned from the previous call to the accounts.filterSets.nonBillableWinningBids.list method.
    - :page_size (Integer): Requested page size. The server may return fewer results than requested. If unspecified, the server will pick an appropriate default.

  ## Returns

  {:ok, %GoogleApi.AdExchangeBuyer.V2beta1.Model.ListNonBillableWinningBidsResponse{}} on success
  {:error, info} on failure
  """
  @spec adexchangebuyer2_accounts_filter_sets_non_billable_winning_bids_list(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          keyword()
        ) ::
          {:ok, GoogleApi.AdExchangeBuyer.V2beta1.Model.ListNonBillableWinningBidsResponse.t()}
          | {:error, Tesla.Env.t()}
  def adexchangebuyer2_accounts_filter_sets_non_billable_winning_bids_list(
        connection,
        account_id,
        filter_set_id,
        opts \\ []
      ) do
    optional_params = %{
      :key => :query,
      :access_token => :query,
      :quotaUser => :query,
      :pp => :query,
      :bearer_token => :query,
      :oauth_token => :query,
      :upload_protocol => :query,
      :prettyPrint => :query,
      :fields => :query,
      :uploadType => :query,
      :"$.xgafv" => :query,
      :callback => :query,
      :alt => :query,
      :pageToken => :query,
      :pageSize => :query
    }

    %{}
    |> method(:get)
    |> url("/v2beta1/accounts/{accountId}/filterSets/{filterSetId}/nonBillableWinningBids", %{
      "accountId" => URI.encode_www_form(account_id),
      "filterSetId" => URI.encode_www_form(filter_set_id)
    })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.AdExchangeBuyer.V2beta1.Model.ListNonBillableWinningBidsResponse{})
  end
end
