# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.AdExchangeBuyer.V14.Api.Creatives do
  @moduledoc """
  API calls for all endpoints tagged `Creatives`.
  """

  alias GoogleApi.AdExchangeBuyer.V14.Connection
  import GoogleApi.AdExchangeBuyer.V14.RequestBuilder

  @doc """
  Add a deal id association for the creative.

  ## Parameters

  - connection (GoogleApi.AdExchangeBuyer.V14.Connection): Connection to server
  - account_id (Integer): The id for the account that will serve this creative.
  - buyer_creative_id (String): The buyer-specific id for this creative.
  - deal_id (String): The id of the deal id to associate with this creative.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.

  ## Returns

  {:ok, %{}} on success
  {:error, info} on failure
  """
  @spec adexchangebuyer_creatives_add_deal(
          Tesla.Env.client(),
          Integer.t(),
          String.t(),
          String.t(),
          keyword()
        ) :: {:ok, nil} | {:error, Tesla.Env.t()}
  def adexchangebuyer_creatives_add_deal(
        connection,
        account_id,
        buyer_creative_id,
        deal_id,
        opts \\ []
      ) do
    optional_params = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query
    }

    %{}
    |> method(:post)
    |> url("/creatives/{accountId}/{buyerCreativeId}/addDeal/{dealId}", %{
      "accountId" => URI.encode_www_form(account_id),
      "buyerCreativeId" => URI.encode_www_form(buyer_creative_id),
      "dealId" => URI.encode_www_form(deal_id)
    })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(false)
  end

  @doc """
  Gets the status for a single creative. A creative will be available 30-40 minutes after submission.

  ## Parameters

  - connection (GoogleApi.AdExchangeBuyer.V14.Connection): Connection to server
  - account_id (Integer): The id for the account that will serve this creative.
  - buyer_creative_id (String): The buyer-specific id for this creative.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.

  ## Returns

  {:ok, %GoogleApi.AdExchangeBuyer.V14.Model.Creative{}} on success
  {:error, info} on failure
  """
  @spec adexchangebuyer_creatives_get(Tesla.Env.client(), Integer.t(), String.t(), keyword()) ::
          {:ok, GoogleApi.AdExchangeBuyer.V14.Model.Creative.t()} | {:error, Tesla.Env.t()}
  def adexchangebuyer_creatives_get(connection, account_id, buyer_creative_id, opts \\ []) do
    optional_params = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query
    }

    %{}
    |> method(:get)
    |> url("/creatives/{accountId}/{buyerCreativeId}", %{
      "accountId" => URI.encode_www_form(account_id),
      "buyerCreativeId" => URI.encode_www_form(buyer_creative_id)
    })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.AdExchangeBuyer.V14.Model.Creative{})
  end

  @doc """
  Submit a new creative.

  ## Parameters

  - connection (GoogleApi.AdExchangeBuyer.V14.Connection): Connection to server
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :body (Creative): 

  ## Returns

  {:ok, %GoogleApi.AdExchangeBuyer.V14.Model.Creative{}} on success
  {:error, info} on failure
  """
  @spec adexchangebuyer_creatives_insert(Tesla.Env.client(), keyword()) ::
          {:ok, GoogleApi.AdExchangeBuyer.V14.Model.Creative.t()} | {:error, Tesla.Env.t()}
  def adexchangebuyer_creatives_insert(connection, opts \\ []) do
    optional_params = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query,
      :body => :body
    }

    %{}
    |> method(:post)
    |> url("/creatives")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.AdExchangeBuyer.V14.Model.Creative{})
  end

  @doc """
  Retrieves a list of the authenticated user&#39;s active creatives. A creative will be available 30-40 minutes after submission.

  ## Parameters

  - connection (GoogleApi.AdExchangeBuyer.V14.Connection): Connection to server
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :account_id (List[Integer]): When specified, only creatives for the given account ids are returned.
    - :buyer_creative_id (List[String]): When specified, only creatives for the given buyer creative ids are returned.
    - :deals_status_filter (String): When specified, only creatives having the given deals status are returned.
    - :max_results (Integer): Maximum number of entries returned on one result page. If not set, the default is 100. Optional.
    - :open_auction_status_filter (String): When specified, only creatives having the given open auction status are returned.
    - :page_token (String): A continuation token, used to page through ad clients. To retrieve the next page, set this parameter to the value of \&quot;nextPageToken\&quot; from the previous response. Optional.

  ## Returns

  {:ok, %GoogleApi.AdExchangeBuyer.V14.Model.CreativesList{}} on success
  {:error, info} on failure
  """
  @spec adexchangebuyer_creatives_list(Tesla.Env.client(), keyword()) ::
          {:ok, GoogleApi.AdExchangeBuyer.V14.Model.CreativesList.t()} | {:error, Tesla.Env.t()}
  def adexchangebuyer_creatives_list(connection, opts \\ []) do
    optional_params = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query,
      :accountId => :query,
      :buyerCreativeId => :query,
      :dealsStatusFilter => :query,
      :maxResults => :query,
      :openAuctionStatusFilter => :query,
      :pageToken => :query
    }

    %{}
    |> method(:get)
    |> url("/creatives")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.AdExchangeBuyer.V14.Model.CreativesList{})
  end

  @doc """
  Lists the external deal ids associated with the creative.

  ## Parameters

  - connection (GoogleApi.AdExchangeBuyer.V14.Connection): Connection to server
  - account_id (Integer): The id for the account that will serve this creative.
  - buyer_creative_id (String): The buyer-specific id for this creative.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.

  ## Returns

  {:ok, %GoogleApi.AdExchangeBuyer.V14.Model.CreativeDealIds{}} on success
  {:error, info} on failure
  """
  @spec adexchangebuyer_creatives_list_deals(
          Tesla.Env.client(),
          Integer.t(),
          String.t(),
          keyword()
        ) ::
          {:ok, GoogleApi.AdExchangeBuyer.V14.Model.CreativeDealIds.t()} | {:error, Tesla.Env.t()}
  def adexchangebuyer_creatives_list_deals(connection, account_id, buyer_creative_id, opts \\ []) do
    optional_params = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query
    }

    %{}
    |> method(:get)
    |> url("/creatives/{accountId}/{buyerCreativeId}/listDeals", %{
      "accountId" => URI.encode_www_form(account_id),
      "buyerCreativeId" => URI.encode_www_form(buyer_creative_id)
    })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.AdExchangeBuyer.V14.Model.CreativeDealIds{})
  end

  @doc """
  Remove a deal id associated with the creative.

  ## Parameters

  - connection (GoogleApi.AdExchangeBuyer.V14.Connection): Connection to server
  - account_id (Integer): The id for the account that will serve this creative.
  - buyer_creative_id (String): The buyer-specific id for this creative.
  - deal_id (String): The id of the deal id to disassociate with this creative.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.

  ## Returns

  {:ok, %{}} on success
  {:error, info} on failure
  """
  @spec adexchangebuyer_creatives_remove_deal(
          Tesla.Env.client(),
          Integer.t(),
          String.t(),
          String.t(),
          keyword()
        ) :: {:ok, nil} | {:error, Tesla.Env.t()}
  def adexchangebuyer_creatives_remove_deal(
        connection,
        account_id,
        buyer_creative_id,
        deal_id,
        opts \\ []
      ) do
    optional_params = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query
    }

    %{}
    |> method(:post)
    |> url("/creatives/{accountId}/{buyerCreativeId}/removeDeal/{dealId}", %{
      "accountId" => URI.encode_www_form(account_id),
      "buyerCreativeId" => URI.encode_www_form(buyer_creative_id),
      "dealId" => URI.encode_www_form(deal_id)
    })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(false)
  end
end
