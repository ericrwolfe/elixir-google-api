# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.Calendar.V3.Model.AclRule do
  @moduledoc """


  ## Attributes

  - etag (String.t): ETag of the resource. Defaults to: `null`.
  - id (String.t): Identifier of the ACL rule. Defaults to: `null`.
  - kind (String.t): Type of the resource (\&quot;calendar#aclRule\&quot;). Defaults to: `null`.
  - role (String.t): The role assigned to the scope. Possible values are:   - \&quot;none\&quot; - Provides no access.  - \&quot;freeBusyReader\&quot; - Provides read access to free/busy information.  - \&quot;reader\&quot; - Provides read access to the calendar. Private events will appear to users with reader access, but event details will be hidden.  - \&quot;writer\&quot; - Provides read and write access to the calendar. Private events will appear to users with writer access, and event details will be visible.  - \&quot;owner\&quot; - Provides ownership of the calendar. This role has all of the permissions of the writer role with the additional ability to see and manipulate ACLs. Defaults to: `null`.
  - scope (AclRuleScope):  Defaults to: `null`.
  """

  defstruct [
    :etag,
    :id,
    :kind,
    :role,
    :scope
  ]
end

defimpl Poison.Decoder, for: GoogleApi.Calendar.V3.Model.AclRule do
  import GoogleApi.Calendar.V3.Deserializer

  def decode(value, options) do
    value
    |> deserialize(:scope, :struct, GoogleApi.Calendar.V3.Model.AclRuleScope, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Calendar.V3.Model.AclRule do
  def encode(value, options) do
    GoogleApi.Calendar.V3.Deserializer.serialize_non_nil(value, options)
  end
end
